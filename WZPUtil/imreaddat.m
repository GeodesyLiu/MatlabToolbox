% =========================================================================
% Copyright:    WZP
% Filename:     imreaddat.m
% Description:
% 
% @author:      wuzhipeng
% @email:       763008300@qq.com
% @website:     https://wuzhipeng.cn/
% @create on:   05-Jul-2019 17:09:26
% @version:     Matlab 9.9.0.1467703 (R2020b)
% =========================================================================
%imreaddat Read image from real-valued or complex-valued binary file 
% (*.wzp, *.dat, or the files generated by gamma software).
% 
% matrix = imreaddat(path, width, dtype, machineformat)
%   dtype (default: 'single'):
%       'int8'    'integer*1'      integer, 8 bits.
%       'int16'   'integer*2'      integer, 16 bits.
%       'int32'   'integer*4'      integer, 32 bits.
%       'int64'   'integer*8'      integer, 64 bits.
%       'uint8'   'integer*1'      unsigned integer, 8 bits.
%       'uint16'  'integer*2'      unsigned integer, 16 bits.
%       'uint32'  'integer*4'      unsigned integer, 32 bits.
%       'uint64'  'integer*8'      unsigned integer, 64 bits.
%       'single'  'real*4'         floating point, 32 bits.
%       'float32' 'real*4'         floating point, 32 bits.
%       'double'  'real*8'         floating point, 64 bits.
%       'float64' 'real*8'         floating point, 64 bits.
%       'complex' 'float32*2'      floating point, 64 bits.
%   machineformat (default: 'l'):
%       'b' for Big-endian ordering (GAMMA) 
%       'l' for Little-endian ordering
% 
% Example:
%     1. diff
%         a = imreaddat('a.dat', 10122,'complex','l');
%         figure,imagesc(angle(a)); colormap jet; axis equal
%     2. unw
%         a = imreaddat('a.dat', 10122,'single','l');
%         figure,imagesc(a); colormap jet; axis equal


function matrix = imreaddat(path, width, dtype, machineformat)

if nargin<1
    help imreaddat;
    return;
end
if nargin<2
    error('Please Enter width.');
end
if nargin<3
    dtype = 'single';
end
if nargin<4
    machineformat = 'l'; % machineformat, 'b' for Big-endian ordering(GAMMA) 'l' for Little-endian ordering
end

cpx = 1;
if strcmp(dtype,'complex')
    dtype = 'single';
    cpx = 2;
end


fileID=fopen(path,'r',machineformat);
A = fread(fileID, dtype);
fclose(fileID);

lenA = length(A);

nlines = lenA/(width*cpx);

if floor(nlines)~=nlines
    error('Parameter input is incorrect: width or dtype.');
end

if cpx==2
    a = reshape(A,width*cpx,nlines)';
    matrix = a(:,1:2:end)+1i*a(:,2:2:end);
else
    matrix = reshape(A,width,nlines)';
end

